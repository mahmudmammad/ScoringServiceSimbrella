// <auto-generated />
using System;
using InternTask.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InternTask.Migrations
{
    [DbContext(typeof(ScoringDbContext))]
    partial class ScoringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InternTask.Entities.ConditionEvaluationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConditionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("EligibleAmount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParametersJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("Passed")
                        .HasColumnType("boolean");

                    b.Property<int>("ScoringResultEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScoringResultEntityId");

                    b.ToTable("ConditionEvaluations");
                });

            modelBuilder.Entity("InternTask.Entities.ScoringResultEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("EligibleAmount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ScoringResults");
                });

            modelBuilder.Entity("InternTask.Entities.ConditionEvaluationEntity", b =>
                {
                    b.HasOne("InternTask.Entities.ScoringResultEntity", "ScoringResult")
                        .WithMany("ConditionEvaluations")
                        .HasForeignKey("ScoringResultEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScoringResult");
                });

            modelBuilder.Entity("InternTask.Entities.ScoringResultEntity", b =>
                {
                    b.Navigation("ConditionEvaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
